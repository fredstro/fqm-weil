###
### tox.ini with parts taken from the sagemath source
###
[tox]
envlist = doctest, coverage, pycodestyle, relint, codespell, flake8
skipsdist = true

[testenv]
setenv =
    SAGE=sage
    HOME='{toxinidir}'
    TEE=tee
whitelist_externals =
    {env:SAGE}
    tox
    {env:TEE}

commands = tox -c '{toxinidir}/tox.ini' -e {envname} -- {posargs}

[testenv:doctest]
description =
   run Sage the Sage doctester (same as "sage -t")
commands =
    {env:SAGE} -t -p 0 {posargs:{toxinidir}/src/}

[testenv:coverage]
;deps =
;    coverage
;    coverage[toml]
;commands =
;    coverage run --source={{posargs:{toxinidir}/src/}
;    coverage report -m
;fail_under = 100
description =
    give information about doctest coverage of files
    (same as "sage --coverage[all]")
commands =
    {env:SAGE} --coverage {posargs:{toxinidir}/src/} --only-bad
;    \'| {env:TEE} /dev/stderr | grep 59\'

[pycodestyle]
max-line-length = 99
statistics = True
count = True
# E225 - white space around operators causes troubles with type casting and properties in Cython, e.g.
# (<RealNumber> left).value will be invalid per E225 and
# ( < RealNumber > left).value passes E225 but is invalid per E201
# The only way to reconcile this is to introduce a line break:
# (
#     < RealNumber > left).value
ignore = E225

[testenv:pycodestyle]
description =
    Check against PEP8 style conventions.
deps = pycodestyle
whitelist_externals = pycodestyle
;commands = pycodestyle --show-source --show-pep8 {posargs:{toxinidir}/src/}
commands = pycodestyle {posargs:{toxinidir}/src/}

[testenv:relint]
description =
    check whether some forbidden patterns appear
    (includes all patchbot pattern-exclusion plugins)
# https://github.com/codingjoe/relint
# The patterns are in .relint.yaml
deps = relint
whitelist_externals = find
commands = find {posargs:{toxinidir}/src/} -exec {toxinidir}/.tox/relint/bin/relint -c {toxinidir}/.relint.yaml \{\} +

[testenv:codespell]
description =
    check for misspelled words in source code
# https://pypi.org/project/codespell/
deps = codespell
commands = codespell \
    --skip="*.so,*.c,*.cpp,.git,.idea,.ipynb_checkpoints,.tox,dist,*.egg-info" \
    --dictionary=- \
    {posargs:{toxinidir}/src}

# Flake8 is similar to pcodestyle in that it checks PEP8 violations but it also checks complexity.
# Note that flake8 also deals with Cython files slightly differently.
[flake8]
max-line-length = 100
filename = *.py, *.pyx
max_complexity = 10
per-file-ignores =
    __init__.py:F401
    *.pyx:E999, E225

[testenv:flake8]
description =
    check PEP8 conventions
deps = flake8
commands = flake8 {posargs:{toxinidir}/src/}